@page "/databinding"
@inject IJSRuntime jsruntime
<div class="row">
    <div class="col s12">
        <h1>Demonstration of Data Binding</h1>
        <div class="divider"></div>
    </div>
    <div class="col s12 center-align valign-wrapper">
        <p>Data-binding refers to the relationship between variables in code (data) with text displayed
        on screen. There's 2 types of data-binding: one-way and two-way.</p>
    </div>
</div>

<div class="row">
    <div class="col s12 m6">
        <div class="card light-blue darken-4">
            <div class="card-content white-text">
                <span class="card-title">One-way Data Binding</span>
                <p>
                    In one-way data binding, text on screen is updated when the value of its bound variable changes.
                </p>
                <p><strong>Counter: @currentCount</strong></p>
            </div>
            <div class="card-action light-blue lighten-4">
                <div class="row">
                    <div class="col s10 center-align valign-wrapper">Click the + button to increase the counter</div>
                    <div class="col s2 right-align valign-wrapper">
                        <a class="btn-floating waves-effect waves-light blue" @onclick="IncrementCount"><i class="material-icons">add</i></a>
                    </div>
                </div>                
            </div>
        </div>
    </div>
    <div class="col s12 m6">
        <div class="card blue lighten-4">
            <div class="card-content">
                <span class="card-title">Two-way Binding</span>
                <div class="row">
                    <div class="col s12">
                        <p>
                            Two-way data binding is typically used in forms, where a change in the value on the form also
                            updates the value of its variable.
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s6">
                        <input placeholder="John" id="first_name" type="text" class="validate" @bind="firstName">
                        <label for="first_name">First Name</label>
                    </div>
                    <div class="input-field col s6">
                        <input placeholder="Snow" id="last_name" type="text" class="validate" @bind="lastName">
                        <label for="last_name">Last Name</label>
                    </div>
                </div>
                <div class="card-action">
                    <div class="row center-align">
                        <div class="col s6">
                            <a class="btn-floating waves-effect waves-light blue" @onclick="ShowToast"><i class="material-icons">thumb_up</i></a>
                            <p>Ok</p>
                        </div>
                        <div class="col s6">
                            <a class="btn-floating waves-effect waves-light blue" @onclick="ResetForm"><i class="material-icons">clear_all</i></a>
                            <p>Clear Form</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int currentCount = 0;

    private string firstName = "";
    private string lastName = "";

    private void IncrementCount()
    {
        currentCount++;
    }

    private void ResetForm()
    {
        firstName = "";
        lastName = "";
    }

    private async Task ShowToast()
    {
        var message = $"Hello {firstName} {lastName}!";
        await jsruntime.InvokeVoidAsync("ShowToast", message);
    }
}
